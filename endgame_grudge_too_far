--CR CHANGED: Modified from vanilla, updated regions and added some factions
endgame_grudge_too_far = {
	army_template = "endgame_grudge_too_far",
	unit_list = {
		--Infantry
		wh_main_dwf_inf_miners_1 = 6,
		wh_main_dwf_inf_hammerers = 8,
		wh_main_dwf_inf_ironbreakers = 8,
		wh_main_dwf_inf_longbeards = 4,
		wh_main_dwf_inf_longbeards_1 = 8,
		wh_main_dwf_inf_slayers = 6,
		wh2_dlc10_dwf_inf_giant_slayers = 4,
		wh_main_dwf_inf_thunderers_0 = 8,
		wh_main_dwf_inf_irondrakes_0 = 4,
		wh_main_dwf_inf_irondrakes_2 = 6,
		wh_dlc06_dwf_inf_rangers_0 = 2,
		wh_dlc06_dwf_inf_rangers_1 = 4,
		wh_dlc06_dwf_inf_bugmans_rangers_0 = 2,
			
			--Artillery
		wh_main_dwf_art_grudge_thrower = 1,
		wh_main_dwf_art_cannon = 4,
		wh_main_dwf_art_organ_gun = 4,
		wh_main_dwf_art_flame_cannon = 2,
			
			--Vehicles
		wh_main_dwf_veh_gyrocopter_0 = 1,
		wh_main_dwf_veh_gyrocopter_1 = 1,
		wh_main_dwf_veh_gyrobomber = 1,
	},
	major_army_count = 4, -- Number of armies that spawn for the major playables
	minor_army_count = 2, -- Number of armies that spawn for the minor dwarves
	early_warning_event = "wh3_main_ie_incident_endgame_grudge_too_far_early_warning",
	ai_personality = "wh3_combi_dwarf_endgame",
	subculture = "wh_main_sc_dwf_dwarfs"
}

function endgame_grudge_too_far:trigger()
	local potential_dwarfs = {
		wh2_dlc17_dwf_thorek_ironbrow     = "cr_oldworld_region_zarakzil",
		wh_main_dwf_karak_izor            = "cr_oldworld_region_grimmpeak",
		wh_main_dwf_karak_kadrin          = "cr_oldworld_region_karak_kadrin",
		wh3_main_dwf_the_ancestral_throng = "cr_oldworld_region_kraka_ornsmotek",
		wh_main_dwf_dwarfs                = "cr_oldworld_region_karaz_a_karak",
		wh3_dlc25_dwf_malakai             = "cr_oldworld_region_karag_dum",
		wh_main_dwf_kraka_drak            = "cr_oldworld_region_kraka_drak",
		wh_main_dwf_barak_varr            = "cr_oldworld_region_barak_varr",
		wh_main_dwf_zhufbar               = "cr_oldworld_region_zhufbar",
		wh_main_dwf_karak_norn            = "cr_oldworld_region_karak_norn",
		wh_main_dwf_karak_hirn            = "cr_oldworld_region_karak_hirn",
		wh_main_dwf_karak_azul            = "cr_oldworld_region_karak_azul",
		wh_main_dwf_karak_ziflin          = "cr_oldworld_region_karak_ziflin"
,
		cr_dwf_clan_durazgrund            = "cr_oldworld_region_karak_ungor",
		cr_dwf_bugmans_brewery            = "cr_oldworld_region_bugmans_brewery",
		wh2_dlc15_dwf_clan_helhein        = "cr_oldworld_region_ekrund",
		cr_dwf_kraka_ravensvake           = "cr_oldworld_region_kraka_ravnvake",
        cr_dwf_clan_barruk                = "cr_oldworld_region_agrul_migdhal",
        cr_dwf_slaves_of_zharr            = "cr_oldworld_region_plains_of_zharr_6_1",
        wh2_main_dwf_greybeards_prospectors = "cr_oldworld_region_karag_orrud",
        wh3_main_dwf_karak_azorn            = "cr_oldworld_region_karak_azorn",
        cr_dwf_karak_izor                   = "cr_oldworld_region_karak_izor",
	}
	
	local dwarf_regions = {}
	
	for faction_key, region_key in pairs(potential_dwarfs) do
		local invasion_faction = cm:get_faction(faction_key)
		if not invasion_faction:is_human() and not invasion_faction:was_confederated() then
			table.insert(dwarf_regions, region_key)
			local army_count
			local can_be_human = invasion_faction:can_be_human()
			if can_be_human then
				army_count = math.floor(self.major_army_count*endgame.settings.difficulty_mod)
			else
				army_count = math.floor(self.minor_army_count*endgame.settings.difficulty_mod)
			end
			endgame:create_scenario_force(faction_key, region_key, self.army_template, self.unit_list, true, army_count)
			if faction_key == "wh_main_dwf_karak_izor" then
				if not invasion_faction:is_dead() and cm:get_region("cr_oldworld_region_karag_lhune"):owning_faction():name() == faction_key then
					endgame:create_scenario_force(faction_key, "cr_oldworld_region_karag_lhune", self.army_template, self.unit_list, true, army_count)
				end
			end

			cm:instantly_research_all_technologies(faction_key)
			cm:force_change_cai_faction_personality(faction_key, self.ai_personality)

			-- Give the invasion region to the invader if it isn't owned by them or a human
			local region = cm:get_region(region_key)
			local region_owner = region:owning_faction()
			if region_owner:is_null_interface() or (region_owner:name() ~= faction_key and region_owner:is_human() == false) then
				cm:transfer_region_to_faction(region_key, faction_key)
			end

			endgame:no_peace_no_confederation_only_war(faction_key)
			endgame:declare_war_on_adjacent_region_owners(invasion_faction, region, self.subculture)

			cm:apply_effect_bundle("wh3_main_ie_scripted_endgame_grudge_too_far", faction_key, 0)
			table.insert(endgame.revealed_regions, region_key)
		end
	end

	local human_factions = cm:get_human_factions()
	local region_count_halved = math.floor((#dwarf_regions/2) + 0.5)
	local objectives = {
		{
			type = "CONTROL_N_REGIONS_FROM",
			conditions = {
				"total "..region_count_halved,
				"override_text mission_text_text_mis_activity_control_n_regions_satrapy_including_at_least_n"
			}
		}
	}

	local incident_key = "wh3_main_ie_incident_endgame_grudge_too_far"
	if #dwarf_regions == 0 then
		-- We somehow don't have any targets - silently exit the scenario
		return
	else
		for i = 1, #dwarf_regions do 
			table.insert(objectives[1].conditions, "region "..dwarf_regions[i])
		end
	end

	cm:activate_music_trigger("ScriptedEvent_Negative", "wh_main_sc_emp_empire")
	
	for i = 1, #human_factions do
		endgame:add_victory_condition_listener(human_factions[i], incident_key, objectives)
		cm:trigger_incident_with_targets(
			cm:get_faction(human_factions[i]):command_queue_index(),
			incident_key,
			0,
			0,
			0,
			0,
			cm:get_region(dwarf_regions[1]):cqi(),
			0
		)
	end

end
